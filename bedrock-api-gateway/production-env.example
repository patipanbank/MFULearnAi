# ==================================================
# AWS Bedrock API Gateway - Production Environment
# ==================================================

# Environment Configuration
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO
LOG_FORMAT=json

# Server Configuration
HOST=0.0.0.0
PORT=8000
RELOAD=false

# Security Configuration
# IMPORTANT: Change these values for production!
API_KEYS=your-api-key-1,your-api-key-2,your-api-key-3
SECRET_KEY=your-super-secret-key-change-this-for-production

# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
# AWS_SESSION_TOKEN=your-aws-session-token  # Optional for temporary credentials

# Rate Limiting Configuration
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# Redis Configuration (for distributed rate limiting)
REDIS_URL=redis://redis:6379/0
REDIS_PASSWORD=your-redis-password
REDIS_DB=0
REDIS_MAX_CONNECTIONS=10

# MongoDB Configuration (for usage tracking)
MONGODB_URI=mongodb://mongodb:27017/bedrock_gateway
MONGODB_USERNAME=bedrock_user
MONGODB_PASSWORD=your-mongodb-password
MONGODB_DATABASE=bedrock_gateway
MONGODB_MAX_CONNECTIONS=10

# SSL/TLS Configuration
SSL_CERT_PATH=/etc/ssl/certs/bedrock-gateway.crt
SSL_KEY_PATH=/etc/ssl/private/bedrock-gateway.key

# Nginx Configuration
NGINX_ENABLED=true
NGINX_HOST=nginx
NGINX_PORT=80

# CORS Configuration
CORS_ORIGINS=*
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=*

# Monitoring Configuration
ENABLE_METRICS=true
METRICS_PORT=8001
HEALTH_CHECK_INTERVAL=30

# Data Retention
USAGE_DATA_RETENTION_DAYS=90

# Performance Configuration
MAX_WORKERS=4
WORKER_CONNECTIONS=1000
REQUEST_TIMEOUT=300

# Logging Configuration
LOG_FILE=/var/log/bedrock-gateway/app.log

# Optional: Monitoring Services
GRAFANA_PASSWORD=your-grafana-password

# ==================================================
# Docker Compose Specific Variables
# ==================================================

# Docker network configuration
COMPOSE_PROJECT_NAME=bedrock-gateway

# Service versions (optional)
REDIS_VERSION=7-alpine
MONGODB_VERSION=6
NGINX_VERSION=alpine

# ==================================================
# Production Deployment Notes
# ==================================================

# 1. Change all default passwords and keys
# 2. Use strong, unique API keys
# 3. Configure proper SSL certificates
# 4. Set up proper backup strategies for MongoDB
# 5. Configure log rotation
# 6. Set up monitoring and alerting
# 7. Review and adjust resource limits in docker-compose.prod.yml
# 8. Configure firewall rules appropriately
# 9. Set up regular security updates
# 10. Test disaster recovery procedures 