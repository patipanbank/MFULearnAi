services:
  db:
    image: mongo
    container_name: mfulearnai_db
    ports:
      - 27017:27017
    volumes:
      - data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234
    restart: always
    networks:
      - mfulearnai

  redis:
    image: redis:alpine
    container_name: mfulearnai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - mfulearnai
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      # Override specific values that need to be different in Docker
      - MONGODB_URI=mongodb://root:1234@db:27017/mfu_chatbot?authSource=admin
      - CHROMA_URL=http://chroma:8000
      - REDIS_URL=redis://redis:6379
      # All other environment variables will be loaded from .env file
    depends_on:
      - chroma
      - db
      - redis
    networks:
      - mfulearnai
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 1.1.1.1

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Pass build-time variables to Vite
        - VITE_API_URL=${FRONTEND_URL:-https://mfulearnai.mfu.ac.th}/api
        - VITE_WS_URL=wss://mfulearnai.mfu.ac.th/ws
    # This service is now a self-contained frontend server
    restart: unless-stopped
    networks:
      - mfulearnai
    # No ports are exposed to the host, communication is through the docker network

  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # We still mount our custom nginx config for the reverse proxy
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # We mount SSL certificates here
      # - ./path/to/your/certs:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - mfulearnai
    restart: unless-stopped

  chroma:
    image: chromadb/chroma
    container_name: chromadb
    ports:
      - "8000:8000"
    environment:
      - ANONYMIZED_TELEMETRY=False
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chroma:/chroma/chroma
    networks:
      - mfulearnai
    restart: unless-stopped

volumes:
  data:
  redis:
  chroma:
  # The frontend-dist volume is no longer needed with this architecture

networks:
  mfulearnai:
    driver: bridge