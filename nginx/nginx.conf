# Main server configuration
server {
    listen 80;
    server_name mfulearnai.mfu.ac.th;

    # Respect X-Forwarded-Proto header to avoid redirect loops behind a proxy.
    # If the original request protocol was not HTTPS, redirect.
    # This handles direct HTTP access ($http_x_forwarded_proto is empty)
    # and proxied HTTP access ($http_x_forwarded_proto = "http").
    if ($http_x_forwarded_proto != "https") {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    client_max_body_size 100M;
    server_name mfulearnai.mfu.ac.th;

    # SSL configuration - Stronger Ciphers
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # Content-Security-Policy is highly recommended, but requires careful implementation.
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; media-src 'none'; frame-src 'none'; font-src 'self'; connect-src 'self' wss://mfulearnai.mfu.ac.th;" always;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn; # Changed to warn for production

    # Frontend configuration
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket configuration
    location /ws/ { # It's better to use a trailing slash and match it in proxy_pass
        proxy_pass http://backend:5001/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 7d;
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
    }

    # API configuration
    location /api/ {
        proxy_pass http://backend:5000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_read_timeout 3600s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 3600s;
        
        # More secure CORS headers
        # Replace 'https://your-frontend-domain.com' with your actual frontend URL
        add_header 'Access-Control-Allow-Origin' 'https://mfulearnai.mfu.ac.th' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            # Replace 'https://your-frontend-domain.com' with your actual frontend URL
            add_header 'Access-Control-Allow-Origin' 'https://mfulearnai.mfu.ac.th';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Static assets with caching
    # For better performance, consider serving static files directly from nginx
    # by sharing a volume between the frontend and nginx containers.
    # This avoids proxying these requests to the frontend service.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        expires 7d;
        add_header Cache-Control "public, max-age=604800";
    }
}